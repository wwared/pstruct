#+TITLE: pstruct todos

* Syntax for options; both local and global
** DONE pest side
** DONE make types
** DONE make parser functions return types
** STRT get options from file
** use the options

* Support endianness configuration
** both per-item and global; currently only per-item options

* Allow setting array size type; has to be an int
** in options

* Allow setting array max size
** define syntax; probably an option
** update parser

* #define support for constants or similar

* Template tests? Can I do that in a non-shit way?
** Some kind of full test where it runs through go test

* Make code a bit more language-agnostic

* Dummy values (not stored in struct)

* Magic values -> kinda like dummy values, but have a constraint associated

* Better error checking for cstrings

* Variable sized array must have count before the array
Otherwise the encoding makes no sense

* Error message when defining reserved struct items
Need to figure out what those are first
