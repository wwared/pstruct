{% import "struct.tera" as struct -%}

package {{ package_name | lower }}

import ps "github.com/wwared/pstruct"

{% for struct in struct_definitions -%}
    {%- set type = struct.name -%}
    {%- set var = struct.name | varname -%}

    {{ struct::definition(def=struct) }}

func New{{type}}() {{type}} {
     return {{type}}{}
}

func ({{var}} *{{type}}) Encode() []byte {
     stream := ps.NewStream()
     {{var}}.EncodeStream(stream)
     return stream.GetData()
}

func ({{var}} *{{type}}) Decode(data []byte) error {
     return {{var}}.DecodeStream(ps.NewStreamReader(data))
}

func ({{var}} *{{type}}) EncodeStream(stream *ps.Stream) {
    {{- struct::encode(def=struct) }}
}

func ({{var}} *{{type}}) DecodeStream(stream *ps.Stream) error {
    {{- struct::decode(def=struct) }}
}
{% endfor -%}
